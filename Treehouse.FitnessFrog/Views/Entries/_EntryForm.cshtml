@model Treehouse.FitnessFrog.Models.Entry
@using Treehouse.FitnessFrog.Models






@using (Html.BeginForm())
{

    //var selectListItems = new[]
    //{
    //    new SelectListItem() { Value = "1", Text = "Item 1",  Selected = false },
    //    new SelectListItem() { Value = "2", Text = "Item 2", Selected = true },
    //    new SelectListItem() { Value = "3", Text = "Item 3", Selected = false }
    //};


    //var items = new[]
    //{
    //    new { ID = 1, Name = "Item 1"},
    //    new { ID = 2, Name = "Item 2"}
    //};

    //var selectListItems = new SelectList(items, "ID", "Name");


    @*Display global error messages (Pass True to make it show global only) pass text and annonymous class to make it look better. *@
    @Html.ValidationSummary("The following errors were found:", new { @class = "alert alert-danger" })

    <div class="row">

        <div class="col-md-6">

            <div class="form-group">
                @* STRONGLY TYPE WAY TO SPECIFY THE MODEL TYPE PROPERTY *@
                @Html.LabelFor(m => m.Date, new { @class = "control-label datepicker" })
                @Html.TextBoxFor(m => m.Date, "{0:d}", new { @class = "form-control" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ActivityId, new { @class = "control-label" })
                @Html.DropDownListFor(m => m.ActivityId, (SelectList)ViewBag.ActivitiesSelectListItems, "Select an Activity", new { @class = "form-control" })
                @*@Html.ValidationMessageFor(m => m.ActivityId) - removed because we are showing in validation summary section*@
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Duration, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Duration, new { @class = "form-control" })
                @*@Html.ValidationMessageFor(m => m.Duration) - removed because we are showing in validation summary section*@
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Intensity, new { @class = "control-label" })
                <div>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Intensity, Entry.IntensityLevel.Low) @Entry.IntensityLevel.Low
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Intensity, Entry.IntensityLevel.Medium) @Entry.IntensityLevel.Medium
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Intensity, Entry.IntensityLevel.High) @Entry.IntensityLevel.High
                    </label>
                </div>


            </div>

            <div class="form-group">
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(m => m.Exclude) @Html.DisplayNameFor(m => m.Exclude)
                    </label>
                </div>

                @*<input id="Exclude" name="Exclude" type="checkbox" value="true" /> Exclude*@

            </div>

        </div>

        <div class="col-md-6">

            <div class="form-group">
                @Html.LabelFor(m => m.Notes, new { @class = "control-label" })
                @Html.TextAreaFor(m => m.Notes, 14, 20, new { @class = "form-control" })
            </div>

        </div>

        <div class="col-md-12">
            <div class="pad-top">
                <button type="submit" class="btn btn-success btn-lg margin-right">
                    <svg class="bi bi-file-earmark-check" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                        <path d="M9 1H4a2 2 0 00-2 2v10a2 2 0 002 2h5v-1H4a1 1 0 01-1-1V3a1 1 0 011-1h5v2.5A1.5 1.5 0 0010.5 6H13v2h1V6L9 1z" />
                        <path fill-rule="evenodd" d="M15.854 10.146a.5.5 0 010 .708l-3 3a.5.5 0 01-.708 0l-1.5-1.5a.5.5 0 01.708-.708l1.146 1.147 2.646-2.647a.5.5 0 01.708 0z" clip-rule="evenodd" />
                    </svg> Save
                </button>
                <a href="@Url.Action("Index")" class="btn btn-warning btn-lg">
                    <svg class="bi bi-trash" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                        <path d="M5.5 5.5A.5.5 0 016 6v6a.5.5 0 01-1 0V6a.5.5 0 01.5-.5zm2.5 0a.5.5 0 01.5.5v6a.5.5 0 01-1 0V6a.5.5 0 01.5-.5zm3 .5a.5.5 0 00-1 0v6a.5.5 0 001 0V6z" />
                        <path fill-rule="evenodd" d="M14.5 3a1 1 0 01-1 1H13v9a2 2 0 01-2 2H5a2 2 0 01-2-2V4h-.5a1 1 0 01-1-1V2a1 1 0 011-1H6a1 1 0 011-1h2a1 1 0 011 1h3.5a1 1 0 011 1v1zM4.118 4L4 4.059V13a1 1 0 001 1h6a1 1 0 001-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z" clip-rule="evenodd" />
                    </svg> Cancel
                </a>
            </div>
        </div>

    </div>
}
